name: Python Tests

on:
  push:
    branches:
      - main
      - QueueManager.v2
      - QueueManager.v3
  pull_request:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11.9
      uses: actions/setup-python@v3
      with:
        python-version: '3.11.9'
    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Save cache
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    
  Lint:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Set up Python 3.11.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.11.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test Orders API
        run: |
          pytest Orders/tests/tests.py
  
  test-fetchOrder:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Set up Python 3.11.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.11.9'
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Start FastAPI Server
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          uvicorn Orders.main:app --host 127.0.0.1 --port 8000 &
        env:
          PORT: 8000
      - name: Test fetchOrder API
        env:
          BASE_URL: http://127.0.0.1:8000
        run: |
          sleep 5 #Wait for Uvicorn server to initialize
          pytest Manager/tests/test_orderFetcher.py

  test-queueManager:
    runs-on: 'ubuntu-latest'
    needs: Build
    steps:
      - uses: actions/checkout@v4
      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Set up Python 3.11.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.11.9'
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Start FastAPI Server
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          uvicorn Orders.main:app --host 127.0.0.1 --port 8000 &
        env:
          PORT: 8000
      - name: Test queueManager
        env:
          BASEURL: http://127.0.0.1:8000
        run: |
          sleep 5 #Wait for Uvicorn server to start
          pytest Manager/tests/test_queueManager.py
  